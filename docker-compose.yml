version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: carbon_footprint_db
    environment:
      POSTGRES_DB: carbon_footprint
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - carbon_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: carbon_footprint_backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: carbon_footprint
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: super_secret_jwt_key_for_development
      JWT_REFRESH_SECRET: super_secret_refresh_key_for_development
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      PORT: 3000
      FRONTEND_URL: http://localhost:5173
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - carbon_network
    user: root
    command: npm run dev

  # Frontend (opcional para desarrollo)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: carbon_footprint_frontend
    environment:
      VITE_API_URL: http://localhost:3000/api
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - carbon_network
    user: root

volumes:
  postgres_data:

networks:
  carbon_network:
    driver: bridge